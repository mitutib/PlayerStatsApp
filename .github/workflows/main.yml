name: CI (Build → Tests → Docker)

on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

env:
  JAVA_VERSION: '17'
  POM_PATH: PlayerStatsApp-20250116T130828Z-001/PlayerStatsApp/PlayerStats/demo/pom.xml
  DOCKERFILE_PATH: ./Dockerfile     # schimbă dacă Dockerfile nu e în root
  DOCKER_IMAGE_NAME: playerstats

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ hashFiles('**/pom.xml') }}

      # Compilează și rulează doar unit tests (Surefire)
      - name: Build + Unit tests
        run: mvn -B -ntp -DskipITs=true -f "${{ env.POM_PATH }}" clean test

      - name: Package (fără IT)
        run: mvn -B -ntp -DskipITs=true -DskipTests -f "${{ env.POM_PATH }}" package

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: |
            **/target/*.jar

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    services:
      # Dacă folosești Testcontainers, poți ȘTERGE întreg blocul "services:"
      mysql:
        image: mysql:8.4
        ports: [ "3306:3306" ]
        env:
          MYSQL_DATABASE: appdb
          MYSQL_USER: appuser
          MYSQL_PASSWORD: apppass
          MYSQL_ROOT_PASSWORD: rootpass
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uappuser -papppass"
          --health-interval=5s --health-timeout=3s --health-retries=30
    env:
      # Ajustează dacă IT-urile tale citesc din env
      SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/appdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ hashFiles('**/pom.xml') }}
